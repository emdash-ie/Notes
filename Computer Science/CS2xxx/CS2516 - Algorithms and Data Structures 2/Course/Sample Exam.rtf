{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Q2(ii)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab not looking for code for an adjacency map implementation, just a description\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab dictionary with vertices as keys and all edges containing that vertex as values\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab space complexity O(n + m)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab time complexity\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab get_edge \u8211-\u160?O(1) expected\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab degree \u8211- O(1) expected\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab edges - O(max(degree))\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi0 [\u8230?]\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Q2 (iii)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab out_edges\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab in_edges\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab in_degree\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab out_degree\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab start\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab end\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Q2 (iv)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab DAG is a directed graph with no cycles that follow the direction of the graph\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab topological sort is all vertices in the graph listed in an order such that if there's an edge v_i to v_j, then v_i comes before v_j in the list\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Q2 (v)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab work on vertices with in-degree 0\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Q2 (vi)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab combine the graphs and then run the topological sort algorithm\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab will need to define what combining the graphs means\sa180\par}
}
