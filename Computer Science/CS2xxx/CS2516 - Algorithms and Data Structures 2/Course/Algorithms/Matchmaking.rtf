{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Intro\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Given n men and n women, can we find a good heterosexual matching?\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab everybody ranks every possible partner from 1 to n\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab top choice, second choice, etc.\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab no ties allowed in ranking, have to rank everyone\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab A stable matching is one where no two people have an incentive to ignore the matching and run off with each other\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab never have P matched with X but prefers Y at the same time as Y matched with Q but prefers P\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab e.g. Bob matched Isobel but prefers Carol, Carol matched with Dave but prefers Bob\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Questions\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab is there always a stable matching?\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab can we write an algorithm guaranteed to find a stable matching, if we know there is one?\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab how efficient is the algorithm?\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab are all stable matchings equal in quality, or are some better than others?\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab what happens if there are ties (i.e. if person X has no strict preference between P and Q)?\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab what happens if a person doesn't rank all possible partners?\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab what happens if we allow m-to-1 matchings instead of 1-1?\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab match multiple people to 1 person\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 \u160?Algorithm\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 while there are unmatched men\line
    select an unmatched man\line
    if there are no women left on his list\line
        remove the man\line
    else the man proposes to the top-ranked woman still on his list\line
        if the woman is not engaged\line
            reply "ok" and both become engaged\line
        else if the woman thinks the main is not better than her current partner\line
            reply "no" to the man, who remains unmatched\line
            the unmatched man removes the woman from his list\line
        else (and so the woman thinks this man is better than her current partner)\line
            reply "ok" to the main and both become engaged\line
            send a Dear John letter to current partner, who is now unmatched\line
            the unmatched man removes the woman from his list\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Answers\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Does the algorithm terminate?\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab every man steps through their list making proposals, and so will eventually find a match or will reach the end of their list\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Does the algorithm compute a match for everybody?\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab no woman is ever matched to two men at the same time\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab no man is ever matched to two women at the same time\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab once a woman is proposed to, she never becomes unmatched (only trades up)\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab suppose some man is never matched \u8211- then some woman is also never matched, since there are equal numbers. That means she is never proposed to. But since all men rank all women, the unmatched man must have proposed to her \u8211- contradiction.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Is the matching stable?\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab suppose not. Then there are a man M and a woman W such that M is matched with X but prefers W, and W is matched with K but prefers M. M must have proposed to W before X, and W must have rejected him for a more preferred match. But women never change to a lower-ranked match. So W must prefer K to M. Contradiction.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Can we write an algorithm which is guaranteed to find a stable matching?\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab we have an algorithm that always terminates, always finds a match for every man and every woman, and always produces a stable matching. So yes.\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Is there always a stable matching?\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab since our algorithm can always find one, then yes.\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Implementation\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab How should we maintain the data in the algorithm?\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Unmatched men \u8211- process in some order, so use a queue\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Rakings:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab men: need to move through list in order \u8211- a dictionary of lists with the key being the man and the value being the ranking list\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab women: need to find the ranking for an arbitrary man, never changes \u8211- a dictionary of dictionaries: key = woman, value = dictionary of ranks\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Complexity\par}
{\pard \ql \f0 \sa180 \li0 \fi0 O(n) steps to build the initial singleman queue and man_next indices\par}
{\pard \ql \f0 \sa180 \li0 \fi0 O(n^2) to build the women rank dictionaries\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Each man makes at most n proposals, so O(n^2) proposals in total.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Each proposal requires no more than a constant number of dequeuing, etc.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Total time complexity is therefore O(n^2).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Men vs. Women\par}
{\pard \ql \f0 \sa180 \li0 \fi0 As the algorithm is presented, every man receives their highest possible ranked woman, where possible means "could appear in a stable matching".\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab this can be proven but is complicated\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Also, every woman receives their lowest possible ranked man.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Switching the order of the input arguments inverts this.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Notes:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab incomplete lists and ties still allows stable matchings, for revised definitions of stable.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab m-to-1 matchings are also guaranteed\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 [\u8230?]\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Algorithm Relevance\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab this is a nobel prize winning algorithm (stable marriage, Gale-Shapley), with the extensions and associated theory\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab first thing in decades that gave a solution that didn't require money (look it up)\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Extending it to m-to-1 matchings allows applications in:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab matching medical graduates to hospitals in US, Canada, Scotland, Norway, etc.\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab 30,000 graduates at a time (in the US)\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab stable matching important\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab hospital-optimal or student-optimal?\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab matching internet users to available servers\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab matching passengers to drivers in ride-sharing systems\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab matching kidneys to recipients in international organ transplant schemes\sa180\par}
}
