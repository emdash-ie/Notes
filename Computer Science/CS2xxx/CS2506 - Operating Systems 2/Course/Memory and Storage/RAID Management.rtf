{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Problem\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Avoid losing files/data due to disk failures.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Solution: replicate files and store them on different disks\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Example: SME with a local network. Transparently, when a file is stored, 2 or 3 copies are created and stored on randomly selected disks. Only the main copy is visible. This is a software solution.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab you also need a coherency preservation protocol\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab to synchronise changes in the working copy to other copies\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 New Context\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Disks of extremely large capacity are now available.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Also many companies have decided to move their data from their own storage to big datacentres.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 New requirements:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab reliability\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Datacentres also replicate files in other datacentres on other continents (in case of earthquake, etc.)\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab fast access to data\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab fault tolerance\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab can't bring error probability to 0, so need to deal well with them\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab scalability\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab especially the I/O channels to the disks\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab ease of management\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab transparent administration\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab secure access to data\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 RAID Concept\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab solves some of these issues but not all of them\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The concept of RAID was introduced about three decades ago \u8211- taxonomy was first established by Patterson in 1988.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Provides improved reliability by redundancy.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab increases mean time to failure\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab frequently combined with NVRAM to improve write performance\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab memory hierarchy\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Can have size different levels/configurations of RAID.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Frequently, a small number of hot-spare disks are left unallocated, automatically replacing a failed disk and having data rebuilt onto them.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Faster Access Time by Parallelism\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab can allow parallel access to data\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Data striping:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab splitting the bits of each byte across multiple disks \u8211- bit-level striping. With 8 disks, bit {\f1 i} will be stored on disk {\f1 i}. As a result, the "sector capacity" increases 8 times, the same for the access rate.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab allows the 8 bits of a byte to be accessed at the same time\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab This can be generalised to include a number of disks that is either a multiple of or divides into 8. For example, for two disks, every second bit goes to the second disk.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Another popular solution is to split data at the block level rather than at the bit level. In block-level striping, blocks of a file are striped across multiple disks: with n disks, block {\f1 i} goes to disk {\f1 (i mod n) + 1}.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab the performance is better because there's less overhead\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab not sure why\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 RAID Levels\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Mirroring (duplication of all data) provides reliability but is expensive. On the other hand, striping provides high data-transfer rates but not reliability.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Different models that combine reliability and low cost were proposed.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 RAID Level 0\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Striping at the level of blocks but without any redundancy.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Benefits:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab best performance is achieved when data is striped across multiple controllers with only one drive per controller\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab in hardware\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab each disk has a separate I/O channel (this is expensive)\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab very simple design, easy to implement\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Disadvantages:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab not a true RAID because it is not fault-tolerant \u8211-\u160?the failure of one drive will result in all data in an array being lost\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab major disadvantage\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 RAID Level 1\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Disk mirroring \u8211- copying one disk on another.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Benefits:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab one write or two reads possible per mirrored pair.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab twice the read transaction rate of single disks, same write transaction rate as single disks\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab 100% redundancy of data means no rebuild is necessary in case of a disk failure, just a copy to the replacement disk. Under certain circumstances, RAID1 can sustain multiple simultaneous drive failures\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab transfer rate per block is equal to that of a single disk\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab simplest RAID storage subsystem design\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Disadvantages:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab Highest disk overhead of all RAID types (100%) \u8211- inefficient\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab because of coherence maintaining protocol\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab typically the RAID function is done by system software, loading the CPU/server and possibly degrading throughput at high activity levels. Hardware implementation is strongly recommended.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 \u160?RAID Level 2\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Use an error-correcting code (ECC), with RAID 0. One disk stores the 1st bit of all bytes, another disk the 2nd, etc.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Three disks store the error-correcting bits. On read, the ECC verifies correct data or corrects single disk errors.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Benefits:\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab on-the-fly data error correction\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab extremely high data transfer rates possible\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab the higher the data transfer rate required, the better the ratio data disks / ECC disks\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab high cost\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab relatively simple controller design compared to RAID levels 3, 4, and 5\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Disadvantages:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab very high ratio of ECC disks to data disks with smaller word sizes\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 [\u8230?]\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab theoretical\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 RAID Level 3\par}
{\pard \ql \f0 \sa180 \li0 \fi0 bit-interleaved parity organisation \u8211- improves on level 2 by using only one disk for parity\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 RAID Level 4\par}
{\pard \ql \f0 \sa180 \li0 \fi0 block-interleaved parity organisation\par}
{\pard \ql \f0 \sa180 \li0 \fi0 [\u8230?]\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 \u160?RAID Level 5\par}
{\pard \ql \f0 \sa180 \li0 \fi0 block-interleave distributed parity, spreads data an parity among all disks\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 RAID Level 6\par}
{\pard \ql \f0 \sa180 \li0 \fi0 block-leve striping with double distributed parity. Double parity provides fault tolerance up to two failed drives.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 RAID (0 + 1)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 First data is striped, then those disks are mirrored.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 RAID (1 + 0)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 First data is mirrored, and then striped.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Selection of RAID Level\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab RAID 0\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab high-performance applications where data loss is not critical\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab RAID 1\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab high reliability with fast recovery\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab high cost\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab RAID 1+0/0+1\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab both performance and reliability are important, e.g. in small databases\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab RAID 5\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab preferred for storing large volumes of data\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab RAID 6\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab not supported currently by many RAID implementations\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Implementation of RAID\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab in the kernel, e.g. RAID 0, 1, or 0+1\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab software is most flexible but brings additional load on the CPU\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab works well with a dedicated CPU\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab in the host-bus adapter hardware\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab this isn't flexible\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab in the hardware of the storage array. The OS needs to implement the file system on each of the volumes\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab in the storage area network layer by disk virtualisation\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab can correspond to remote storage\par}
{\pard \ql \f0 \sa180 \li720 \fi-360 \endash \tx360\tab can be similar to cloud storage\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Linux RAID Support\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab 2.6 kernel supports md (multiple devices): arrays can be built on top of entire disks or on partitions\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab mdadm is now the standard RAID management tool and should be found in any modern distribution. (http://linux.die.net/man/8/mdadm)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab mdadm has 7 major modes of operation \u8211- normal operation [\u8230?]\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 [\u8230?]\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Questions\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Could RAID 1 achieve better performance of read requests than RAID 0? How?\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Consider a RAID 5 architecture with five disks \u8211- the fifth stores the parity block. How many blocks are accessed in order to perform the following?\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab a write of one data block\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab a write of seven continuous blocks of data\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Summary\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab old idea, but very important to modern datacentres\sa180\par}
}
