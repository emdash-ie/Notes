{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Nested Classes\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Java doesn't allow multiple classes at the top-level\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab have to nest subsequent classes inside the first\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab nested classes can see attributes belonging to outer classes\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab does that include private attributes?\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab you can have several inner classes\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab this is very useful for gui applications\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab main class represents state\par}
{\pard \ql \f0 \sa0 \li1080 \fi-360 \bullet \tx360\tab inner class instances listen to events and can modify the main class state when an event occurs\sa180\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Local Classes\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab You can define classes inside methods\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab more encapsulated than inner classes\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab anonymous classes commonly used for extending a class or implementing an interface for a method parameter\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab visibility doesn't matter because it only exists inside its method\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Static Classes\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab defined at top level of another class\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab no access to outer class instance methods or attributes\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab these and GUIs will not be examined\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Anonymous Classes\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab class without a name\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab extends a single class or implements a single interface\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab combines class definition and instance creation\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab can't have an explicit constructor\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab body should override all necessary methods\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Nested Interfaces\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab interfaces that extend more interfaces\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Implementing Quicksort\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab need to represent linked lists first\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab going to just facilitate adding at the front in constant time\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 See {\f1 Example.java} and {\f1 List.java}. There may be deliberate mistakes.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab args array collects command-line arguments given when calling {\f1 java}\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab could get arguments from file by {\f1 java Example}cat file``\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab our quicksort will be a destructive sort\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab we will sort be re-arranging the references in the linked list\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab use an inner class {\f1 Link} for the nodes\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab private class because clients of the list class should not know anything about the links\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab static class because it doesn't need to know about attributes in the outer class\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab pointer for null to represent empty list\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab using delegation in outer class for {\f1 add} and {\f1 print}\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab call respective methods of the {\f1 Link} class\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab link class can be entirely private and we can still see everything about it in the outer class\sa180\par}
}
