{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Info\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab The moodle course is CS2501.2017\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Early part will revise what we did in CS1106 and extend it.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab 80 marks for exam, 5 assignments each 4 marks (totalling 20) \u8211- 100 marks overall\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab 22 lectures, 5 2-hour labs\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Overview\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Use and application of Database Management Systems (DMBSs)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Database configuration\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab SQL\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Data manipulation language (retrieval, recording, modification, removal)\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Data definition language (creating, altering, removing structures)\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Data control language (data security and integrity)\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Who has what permission on what components of the database.\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Views (aka virtual tables)\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab These allow you to create a much richer representation of data by tailoring a DB to specific users and applications.\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Database programming\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Embedding SQL within programs (ESQL)\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Web-SQL interface programming (PHP)\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Implementation of database systems\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Database directory\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab This describes the database, and is central to all query evaluation. (Queries are validated against this.)\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Relational algebra/calculus\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab SQL is converted/compiled to this intermediate form.\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Query evaluation and optimisation\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Design of database systems (how to find the useful set of tables for an application)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Entity-relationship modelling\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab UML modelling\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab This is an extension of entity-relationship modelling\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Normalisation\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab We may or may not cover this \u8211- it's not really used anymore\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Intro\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A relational database is a collection of data organised into several related tables. The rows in the tables are sometimes called relations and the columns are sometimes called attributes.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A database management system (DBMS) is a software system whose purpose is to support storage of and controlled access to databases. These are often called databases for convenience.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Users\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Users of a DBMS may be:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Casual online users\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab E.g. us\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Sit down, write a query, test that it works, put it in a program.\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Programmers\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Write programs for other users to use to interact with the database\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Parametric end-users\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Run programs and supply parameters to those programs to get different results\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Largest class of users \u8211- typically don't know that they're using a DBMS.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab E.g. staff in a records office\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Database administrators\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab A database is a shared resource \u8211- you need someone to manage it.\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab Important for managing security.\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 Configuration of a DBMS\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A DBMS is usually installed as a server (listening on e.g. TCP/IP port 156).\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Incoming requests are always SQL requests \u8211- the DBMS takes these and executes them.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 A bunch of different clients can be used, and they can be text-only or graphical. Examples include HeidiSQL, MySQL Workbench.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Most DBMSs have interfaces (APIs \u8211- application programming interfaces) to multiple programming languages, to make them more useful.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Different DBMSs use slightly different flavours of SQL, but generally speaking if you can use one you can use them all.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 SQL\par}
{\pard \ql \f0 \sa180 \li0 \fi0 SQL is a set of commands divided into three groups:\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab DDL (Data definition language)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 CREATE}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 DROP}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 ALTER}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab DML (Data manipulation language)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 SELECT}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 DELETE}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 UPDATE}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 INSERT}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab DCL (Data control language)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 GRANT}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 REVOKE}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab These are for managing permissions/access\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 DML is the most commonly used, then DDL, then DCL.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 DML\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 {\f1 SELECT}\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1   SELECT [DISTINCT] ColumnList\line
  FROM TableList\line
  [WHERE Condition]\line
  [GOUP BY ColumnList\line
  HAVING [\u8230?]]\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 Things to Note\par}
{\pard \ql \f0 \sa180 \li0 \fi0 With a {\f1 SELECT} statement with a {\f1 WHERE} condition, every row is checked \u8211- if the condition is true, the row is added to the output. If the condition is false, it isn't.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Note that the {\f1 DISTINCT} option is slow, because it sorts the table to remove duplicates. Usually, you avoid sorting in SQL if possible.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 {\f1 Address LIKE '%Houston%'} allows arbitrary-length strings in place of the % symbols.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 Salary BETWEEN 20000 AND 30000}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 Dno IN (4, 5)}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 CONCAT(Lname, ', ', Fname)}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Concatenates the given strings.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 SELECT Ssn AS "Staff Id"}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Gives a column name to use in the result.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab String matching is case sensitive.\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Some people make sure their databases are kept clean, format-wise\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab It's also possible to turn off case-sensitivity for string matching\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab It's also also possible to do the conversion when you retrieve it:\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab {\f1 SELECT \u8230? WHERE UPPER(Lname) = 'SMITH'}\sa180\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 WHERE SOUNDEX(Lname) = SOUNDEX('SMITH')}\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab {\f1 SOUNDEX} converts strings to sequences of phonemes\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab It's good for one-syllable words, but not great for words with more syllables \u8211-\u160?gets worse as it goes\sa180\par}
}
