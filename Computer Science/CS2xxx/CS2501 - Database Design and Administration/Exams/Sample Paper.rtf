{\rtf1\ansi\deff0{\fonttbl{\f0 \fswiss Helvetica;}{\f1 Courier;}}
{\colortbl;\red255\green0\blue0;\red0\green0\blue255;}
\widowctrl\hyphauto

{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Question 1\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (a)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 (i)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab employee SSNs must be unique can be done with a {\f1 UNIQUE} or {\f1 PRIMARY KEY} constraint.\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab supervisor must be an employee can be done with a {\f1 FOREIGN KEY} constraint\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab employee's department must be valid can be done with a {\f1 FOREIGN KEY} constraint\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab sex must be 'F' or 'M' can be done with a {\f1 CHECK} constraint\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 (ii)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab names must be in a standard format\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab to do this you could limit direct access to the database to just the admin and have everyone else interact with the database through programs, which do their own validation on the inputs\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (b)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 [don't know]\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Question 2\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (a)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The table descriptor in the database directory will be altered. The specific tables altered will be {\f1 COLUMNS} and {\f1 SYSCOLUMNS} for statements that add, delete, or modify columns.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (b)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 For example:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 GRANT UPDATE\line
ON table\line
TO username;\par}
{\pard \ql \f0 \sa180 \li0 \fi0 This would change {\f1 SYSTABAUTH}, either adding a new row for the user and the table, or modifying the existing row. It may also add an entry to {\f1 CATALOG}/{\f1 SYSCATALOG}.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (c)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 The structure of the tables is complicated and assumes a lot of knowledge from the user for direct interaction. Nowadays interacting through scripts is encouraged instead. [Not sure. Also not sure what he means by an example.]\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (d)\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 1.\tx360\tab Does the table {\f1 EMPLOYEE} exist?\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab check {\f1 SYSCATALOG}\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 2.\tx360\tab Does the user running the query have grant option for for {\f1 INSERT}\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab check {\f1 SYSTABAUTH}\sa180\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 3.\tx360\tab Does {\f1 User007} exist?\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab check {\f1 SYSUSERAUTH}\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 If all these conditions are true, the statement will succeed.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (e)\par}
{\pard \ql \f0 \sa180 \li0 \fi0 Create a local copy of the table. If you have resource permissions, you can then put the info into a new table of your own.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Question 3\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (a)\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab if the info you want to display in the output comes from multiple tables/views, you can't use subqueries, and so have to use a join instead\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (b) Find the identity and name of each dependent of an employee working for the Research department\par}
{\pard \ql \f0 \sa180 \li360 \fi-360 \bullet \tx360\tab not sure what identity means? They don't have an ID or SSN\par}
{\pard \ql \f0 \sa0 \li720 \fi-360 \endash \tx360\tab have gone with selecting the employee's SSN\sa180\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 (i) As a Join\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 SELECT Dpnd.ESSN, Dpnd.DEPENDENT_NAME\line
FROM DEPENDENT Dpnd, EMPLOYEE E, DEPARTMENT Dprt\line
WHERE Dpnd.ESSN = E.SSN\line
    AND E.DNO = Dprt.DNUMBER\line
    AND Dprt.DNAME = 'Research';\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 (ii) As a Subquery\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 SELECT ESSN, DEPENDENT_NAME\line
FROM DEPENDENT\line
WHERE ESSN IN (\line
    SELECT SSN FROM EMPLOYEE\line
    WHERE DNO IN (\line
        SELECT DNO FROM DEPARTMENT\line
        WHERE DNAME = 'Research'\line
    )\line
);\par}
{\pard \ql \f0 \sa0 \li360 \fi-360 \bullet \tx360\tab Have used {\f1 WHERE DNO IN} rather than {\f1 WHERE DNO =} to allow for multiple departments called 'Research'.\sa180\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (c) Specify the definition of a view that would simplify the query of (b) above. It should be of the form DependEmpDept (Dependent_Name, SSN, Dno) and contain details of dependents, employees and departments.\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 CREATE VIEW DependEmpDept (ENAME, ESSN, DPND_NAME, DPRT_NUM, DPRT_NAME) AS\line
SELECT CONCAT(E.FNAME, ' ', E.LNAME), E.SSN, Dpnd.DEPENDENT_NAME, Dprt.DNUMBER, Dprt.DNAME\line
FROM DEPENDENT Dpnd, EMPLOYEE E, DEPARTMENT Dprt\line
WHERE Dpnd.ESSN = E.SSN\line
    AND E.DNO = Dprt.DNUMBER;\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs36 Question 4\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs32 (a) Embedded SQL\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 (ii) Why and how is the INTO clause employed in ESQL \u8211- a feature that is absent in standard interactive SQL?\par}
{\pard \ql \f0 \sa180 \li0 \fi0 It's used to store results from a query into variables, e.g.:\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \f1 SELECT Fname, Lname, Address, Tel_No\line
INTO :FirstName, :LastName, :Address, :Telephone\line
FROM STAFF\line
WHERE Sno = :StaffNum\par}
{\pard \ql \f0 \sa180 \li0 \fi0 \b \fs28 (iii) Why is the FOR UPDATE OF ... clause sometimes used with the SELECT statement in ESQL?\par}
{\pard \ql \f0 \sa180 \li0 \fi0 To allow updating of a value as a cursor is being used to look through the results of an SQL statement. {\f1 FOR UPDATE OF} maintains linkage between result tables and the original tables.\par}
}
